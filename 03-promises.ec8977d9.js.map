{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SAErCC,EAAgB,CAACC,EAAUC,KAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,GACT,EAGEQ,EAAY,EAACT,SAAEA,EAAQC,MAAEA,MAC7BP,EAAAgB,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAU,EAG3DW,EAAa,EAACZ,SAAEA,EAAQC,MAAEA,MAC9BP,EAAAgB,OAAOG,QAAQ,sBAAoBb,QAAiBC,MAAU,EAwBhEL,EAAYkB,iBAAiB,UArBTC,IAClBA,EAAIC,iBACJ,IAAIf,MAAEA,EAAKgB,KAAEA,EAAIC,OAAEA,GAAWC,OAAOC,YACnC,IAAIC,SAASN,EAAIO,gBAGnB,GAAKJ,GAAWD,GAAShB,EAAzB,CAIAiB,EAASK,OAAOL,GAChBD,EAAOM,OAAON,GACdhB,EAAQsB,OAAOtB,GAEf,IAAK,IAAIuB,EAAI,EAAGA,EAAIN,EAAQM,IAC1BzB,EAAcyB,EAAI,EAAGvB,EAAQgB,EAAOO,GACjCC,KAAKhB,GACLiB,MAAMd,E,MAVTlB,EAAAgB,OAAOG,QAAQ,mBAUK","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promiseForm = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst onResolve = ({ position, delay }) => {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onRejected = ({ position, delay }) => {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nconst callPromice = evt => {\n  evt.preventDefault();\n  let { delay, step, amount } = Object.fromEntries(\n    new FormData(evt.currentTarget)\n  );\n\n  if (!amount || !step || !delay) {\n    Notify.failure(`❌ Заповніть поля`);\n    return;\n  }\n  amount = Number(amount);\n  step = Number(step);\n  delay = Number(delay);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + step * i)\n      .then(onResolve)\n      .catch(onRejected);\n  }\n};\n\npromiseForm.addEventListener('submit', callPromice);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$promiseForm","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onResolve","Notify","success","$47d4ff9957288465$var$onRejected","failure","addEventListener","evt","preventDefault","step","amount","Object","fromEntries","FormData","currentTarget","Number","i","then","catch"],"version":3,"file":"03-promises.ec8977d9.js.map"}